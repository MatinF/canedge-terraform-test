{
  "Resources": {
    "AWSGlueServiceRoleDataLake": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::Sub": "AWSGlueServiceRoleDataLake-${UniqueID}"
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "glue.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole"
        ],
        "Policies": [
          {
            "PolicyName": {
              "Fn::Sub": "S3InputLimitedAccessPolicyAWSGlue-${UniqueID}"
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject",
                    "s3:ListBucket"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:s3:::${InputS3BucketName}/*"
                    },
                    {
                      "Fn::Sub": "arn:aws:s3:::${InputS3BucketName}"
                    }
                  ]
                }
              ]
            }
          },
          {
            "PolicyName": {
              "Fn::Sub": "S3OutputLimitedAccessPolicyAWSGlue-${UniqueID}"
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject",
                    "s3:PutObject",
                    "s3:ListBucket"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:s3:::${InputS3BucketName}-parquet/*"
                    },
                    {
                      "Fn::Sub": "arn:aws:s3:::${InputS3BucketName}-parquet"
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "GluePythonScriptJob": {
      "Type": "AWS::Glue::Job",
      "DependsOn": "AWSGlueServiceRoleDataLake",
      "Properties": {
        "Name": {
          "Fn::Sub": "create-glue-database-from-s3-${UniqueID}"
        },
        "Role": {
          "Fn::GetAtt": [
            "AWSGlueServiceRoleDataLake",
            "Arn"
          ]
        },
        "ExecutionProperty": {
          "MaxConcurrentRuns": 1
        },
        "GlueVersion": "4.0",
        "WorkerType": "G.1X",
        "NumberOfWorkers": 2,
        "Command": {
          "Name": "glueetl",
          "PythonVersion": "3",
          "ScriptLocation": {
            "Fn::Sub": "s3://${InputS3BucketName}/create-glue-database-from-s3-vG.3.0.py"
          }
        },
        "DefaultArguments": {
          "--enable-auto-scaling": "true",
          "--job-bookmark-option": "job-bookmark-disable",
          "--databasename": {
            "Fn::Sub": "dbparquet${UniqueID}"
          },
          "--bucket_output": {
            "Fn::Sub": "${InputS3BucketName}-parquet"
          },
          "--job-language": "python",
          "--additional-python-modules": "boto3"
        },
        "MaxRetries": 0,
        "Timeout": 2880
      }
    },
    "GlueJobTriggerOnDemand": {
      "Type": "AWS::Glue::Trigger",
      "Properties": {
        "Name": {
          "Fn::Sub": "trigger-job${UniqueID}-on-demand"
        },
        "Type": "ON_DEMAND",
        "Actions": [
          {
            "JobName": {
              "Ref": "GluePythonScriptJob"
            }
          }
        ]
      }
    },
    "GlueJobTriggerScheduled": {
      "Type": "AWS::Glue::Trigger",
      "Properties": {
        "StartOnCreation": false,
        "Name": {
          "Fn::Sub": "trigger-job${UniqueID}-scheduled"
        },
        "Type": "SCHEDULED",
        "Schedule": "cron(0 12 * * ? *)",
        "Actions": [
          {
            "JobName": {
              "Ref": "GluePythonScriptJob"
            }
          }
        ]
      }
    },
    "AthenaAccessUser": {
      "Type": "AWS::IAM::User",
      "Properties": {
        "UserName": {
          "Fn::Sub": "AthenaAccessUser-${UniqueID}"
        }
      }
    },
    "AthenaAccessPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": {
          "Fn::Sub": "AthenaAccessPolicy-${UniqueID}"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "athena:ListDatabases",
                "athena:ListDataCatalogs",
                "athena:ListWorkGroups",
                "athena:GetDatabase",
                "athena:GetDataCatalog",
                "athena:GetQueryExecution",
                "athena:GetQueryResults",
                "athena:GetTableMetadata",
                "athena:GetWorkGroup",
                "athena:ListTableMetadata",
                "athena:StartQueryExecution",
                "athena:StopQueryExecution"
              ],
              "Resource": [
                "*"
              ],
              "Effect": "Allow",
              "Sid": "AthenaQueryAccess"
            },
            {
              "Action": [
                "glue:GetDatabase",
                "glue:GetDatabases",
                "glue:GetTable",
                "glue:GetTables",
                "glue:GetPartition",
                "glue:GetPartitions",
                "glue:BatchGetPartition"
              ],
              "Resource": [
                "*"
              ],
              "Effect": "Allow",
              "Sid": "GlueReadAccess"
            },
            {
              "Sid": "AthenaLimitedS3AccessQueryResults",
              "Effect": "Allow",
              "Action": [
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:ListMultipartUploadParts",
                "s3:AbortMultipartUpload",
                "s3:PutObject"
              ],
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:s3:::${InputS3BucketName}-parquet-query-results"
                },
                {
                  "Fn::Sub": "arn:aws:s3:::${InputS3BucketName}-parquet-query-results/*"
                }
              ]
            },
            {
              "Sid": "AthenaReadOnlyS3AccessDataLake",
              "Effect": "Allow",
              "Action": [
                "s3:GetObject",
                "s3:ListBucket"
              ],
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:s3:::${InputS3BucketName}-parquet"
                },
                {
                  "Fn::Sub": "arn:aws:s3:::${InputS3BucketName}-parquet/*"
                }
              ]
            }
          ]
        },
        "Users": [
          {
            "Ref": "AthenaAccessUser"
          }
        ]
      }
    },
    "AthenaAccessKey": {
      "Type": "AWS::IAM::AccessKey",
      "Properties": {
        "UserName": {
          "Ref": "AthenaAccessUser"
        }
      }
    },
    "ParquetDataLakeDatabase": {
      "Type": "AWS::Glue::Database",
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId"
        },
        "DatabaseInput": {
          "Name": {
            "Fn::Sub": "dbparquet${UniqueID}"
          },
          "Description": "Database for parquet data lake"
        }
      }
    },
    "OutputS3BucketQueryResults": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "InputS3BucketName"
              },
              "-parquet-query-results"
            ]
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      }
    },
    "MyAthenaWorkgroup": {
      "Type": "AWS::Athena::WorkGroup",
      "Properties": {
        "Name": {
          "Fn::Sub": "athenaworkgroup-${UniqueID}"
        },
        "Description": "Athena workgroup",
        "State": "ENABLED",
        "WorkGroupConfiguration": {
          "ResultConfiguration": {
            "OutputLocation": {
              "Fn::Sub": "s3://${InputS3BucketName}-parquet-query-results/"
            }
          },
          "EnforceWorkGroupConfiguration": true
        }
      }
    }
  },
  "Outputs": {
    "01": {
      "Description": "S3 Access Key ID (Athena)",
      "Value": {
        "Ref": "AthenaAccessKey"
      }
    },
    "02": {
      "Description": "S3 Secret Access Key (Athena)",
      "Value": {
        "Fn::GetAtt": [
          "AthenaAccessKey",
          "SecretAccessKey"
        ]
      }
    },
    "04": {
      "Description": "Data Source",
      "Value": "AwsDataCatalog"
    },
    "05": {
      "Description": "Database",
      "Value": {
        "Fn::Sub": "dbparquet${UniqueID}"
      }
    },
    "06": {
      "Description": "Workgroup",
      "Value": {
        "Fn::Sub": "athenaworkgroup-${UniqueID}"
      }
    }
  }
}