Mike

I found the solution. The issue was the use of a deprecated terraform resource. Since the Terraform split of replacing a the azurerm_function_app with a windows and linux version, the need is now to specify a linux app resource using the build on deployment setting.

Note that the WEBSITE_RUN_FROM_PACKAGE in this particular scenario needs to be removed and you instead use build during deployment with the zip_deploy_file argument for success. Complete code in case anyone faces a similar issue:

HashiCorp Configuration Language

Copy
resource "azurerm_linux_function_app" "function" {
  name                        = var.app_name
  resource_group_name         = data.azurerm_resource_group.arc_resource_group.name
  location                    = data.azurerm_resource_group.arc_resource_group.location
  service_plan_id             = azurerm_service_plan.app_service_plan.id
  storage_account_name        = var.storage_account_name
  storage_account_access_key  = var.storage_account_access_key
  https_only                  = var.https_only
  functions_extension_version = var.functions_extension_version
  app_settings = {
    "ENABLE_ORYX_BUILD"              = var.enable_oryx_build
    "SCM_DO_BUILD_DURING_DEPLOYMENT" = var.scm_do_build_during_deployment
    "FUNCTIONS_WORKER_RUNTIME"       = "python"
    "AzureWebJobsFeatureFlags"       = "EnableWorkerIndexing"
    "APPINSIGHTS_INSTRUMENTATIONKEY" = azurerm_application_insights.arc_function_insights.instrumentation_key
    "KEY_VAULT_URL" = var.key_vault_name
  }

  site_config {
    application_stack {
      python_version = var.python_version
    }
    always_on = var.always_on
  }

  identity {
    type = "SystemAssigned"
  }

  zip_deploy_file = data.archive_file.function_code.output_path

  depends_on = [data.archive_file.function_code]
}